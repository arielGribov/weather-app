name: CI/CD Pipeline

'on':
  workflow_dispatch:
    branches: 
      - ofir-review
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Docker Hub
        run: |
          aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_BACKEND_REPO }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.ECR_BACKEND_REPO }} ./backend
          docker push ${{ secrets.ECR_BACKEND_REPO }}

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.ECR_FRONTEND_REPO }} ./frontend
          docker push ${{ secrets.ECR_FRONTEND_REPO }}

  deploy:
    name: Deploy to EKS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_CONTENT }}" | base64 -d > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig

      - name: Get EKS Cluster Name and Setup Kubeconfig
        run: |
          CLUSTER_NAME=$(aws eks list-clusters --region $AWS_REGION --query "clusters[0]" --output text)
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./terraform/kubernetes/backend.yaml
          kubectl apply -f ./terraform/kubernetes/frontend.yaml
